// <auto-generated />
using EntityFrameWork2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EntityFrameWork2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221120200501_Add Country")]
    partial class AddCountry
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CityVMPersonVM", b =>
                {
                    b.Property<string>("citiesName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("peopleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("citiesName", "peopleId");

                    b.HasIndex("peopleId");

                    b.ToTable("CityVMPersonVM");
                });

            modelBuilder.Entity("EntityFrameWork2.Models.CityVM", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CountryVMName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PostNumber")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Name");

                    b.HasIndex("CountryVMName");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            Name = "Åre",
                            PostNumber = "415 55"
                        },
                        new
                        {
                            Name = "Järpen",
                            PostNumber = "415 44"
                        });
                });

            modelBuilder.Entity("EntityFrameWork2.Models.CountryVM", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Name");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            Name = "Swedan"
                        },
                        new
                        {
                            Name = "Norway"
                        });
                });

            modelBuilder.Entity("EntityFrameWork2.Models.PersonVM", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EfterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = "f7d177a2-7d74-44cc-b18a-a999d7c8ae79",
                            EfterName = "khawari",
                            Name = "Ali",
                            PhoneNumber = "1245",
                            age = 32
                        },
                        new
                        {
                            Id = "5539ef22-201e-4d4c-8101-04483a45111e",
                            EfterName = "khawari22",
                            Name = "Ali22",
                            PhoneNumber = "1245",
                            age = 32
                        },
                        new
                        {
                            Id = "129bc746-4c3d-40ab-846b-0852b9d5bd96",
                            EfterName = "khawari33",
                            Name = "Ali33",
                            PhoneNumber = "1245",
                            age = 32
                        });
                });

            modelBuilder.Entity("CityVMPersonVM", b =>
                {
                    b.HasOne("EntityFrameWork2.Models.CityVM", null)
                        .WithMany()
                        .HasForeignKey("citiesName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFrameWork2.Models.PersonVM", null)
                        .WithMany()
                        .HasForeignKey("peopleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EntityFrameWork2.Models.CityVM", b =>
                {
                    b.HasOne("EntityFrameWork2.Models.CountryVM", null)
                        .WithMany("City")
                        .HasForeignKey("CountryVMName");
                });

            modelBuilder.Entity("EntityFrameWork2.Models.CountryVM", b =>
                {
                    b.Navigation("City");
                });
#pragma warning restore 612, 618
        }
    }
}
